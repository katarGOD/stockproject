(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["2d1dea52"],{"6c2d":function(e,t,a){"use strict";var r=a("da81"),n=a.n(r);n.a},"78ce":function(e,t,a){"use strict";a.r(t);var r=function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("q-page",[a("q-card",{staticStyle:{"margin-bottom":"5px"}},[a("q-card-title",[a("p",{staticClass:"q-headline"},[e._v(e._s(e.$t(e.$changeCase.sentenceCase(e.$options.name))))]),a("span",{attrs:{slot:"right"},slot:"right"},[a("q-field",{staticStyle:{width:"200px"},attrs:{"label-width":6,label:e.$t("Year (C.E.)")}},[a("q-select",{attrs:{options:e.yearOptions},model:{value:e.filterByYear,callback:function(t){e.filterByYear=t},expression:"filterByYear"}})],1)],1)])],1),a("q-table",{attrs:{"row-key":".key",selection:"single",columns:e.columns,data:e.overtimeRequestTB,filter:e.filter,loading:e.loading,pagination:e.pagination,selected:e.selected,"visible-columns":e.visibleColumns},on:{"update:pagination":function(t){e.pagination=t},"update:selected":function(t){e.selected=t}},scopedSlots:e._u([{key:"top-selection",fn:function(t){return[a("div",{staticStyle:{"padding-top":"8px","padding-bottom":"8px"}},[1==e.selected.length?a("q-btn",{staticClass:"q-mr-sm",attrs:{color:"primary",icon:"edit",round:"",disable:!e.hasPermission(["supervisor--overtime-approve--update"])},on:{click:function(t){e.openUpdateFrom(e.inputForm,e.selected[0])}}}):e._e()],1)]}},{key:"top-left",fn:function(t){return[a("q-search",{attrs:{"hide-underline":"",color:"secondary"},model:{value:e.filter,callback:function(t){e.filter=t},expression:"filter"}})]}},{key:"top-right",fn:function(t){return[a("q-table-columns",{staticClass:"q-mr-sm",attrs:{color:"secondary",columns:e.columns},model:{value:e.visibleColumns,callback:function(t){e.visibleColumns=t},expression:"visibleColumns"}})]}},{key:"body-cell-overtimeDate",fn:function(t){return a("q-td",{attrs:{props:t}},[a("q-btn",{attrs:{flat:"",label:e.FormatDate(t.value,"YYYY-MM-DD")},on:{click:function(a){e.selected=[e._.find(e.overtimeRequestTB,{".key":t.row[".key"]})],e.openUpdateFrom(e.inputForm,e.selected[0])}}})],1)}},{key:"body-cell-type",fn:function(t){return a("q-td",{attrs:{props:t}},[a("span",{attrs:{small:""}},[e._v("\n        "+e._s(e._.find(e.overtimeTypeOptions,{value:t.value})?e._.find(e.overtimeTypeOptions,{value:t.value}).label:"Overtime Type")+"\n      ")])])}},{key:"body-cell-authUser",fn:function(t){return a("q-td",{attrs:{props:t}},[a("span",{attrs:{small:""}},[e._v("\n        "+e._s(e._.find(e.authUserOptions,{value:t.value})?e._.find(e.authUserOptions,{value:t.value}).label:".  .  .")+"\n      ")])])}},{key:"body-cell-approval",fn:function(t){return a("q-td",{attrs:{props:t}},[t.value?a("q-chip",{attrs:{icon:"check",color:"positive"}},[e._v("\n        "+e._s(e.$t("Approval"))+"\n      ")]):a("q-chip",{attrs:{icon:"clear",color:"warning"}},[e._v("\n        "+e._s(e.$t("Waiting"))+"\n      ")])],1)}}])}),a("q-modal",{attrs:{maximized:"","content-css":{padding:"50px"}},model:{value:e.formModal,callback:function(t){e.formModal=t},expression:"formModal"}},[a("div",{staticClass:"row justify-center gutter-lg"},[a("div",{staticClass:"col-xl-4 col-lg-4 col-md-4 col-sm12 col-xs-12"},[a("div",{staticClass:"q-headline"},[e._v(e._s(e.$t(e.$changeCase.sentenceCase(e.$options.name))))]),a("div",{staticClass:"q-subheading"},[e._v(e._s(e.subHeading))])]),a("div",{staticClass:"col-xl-8 col-lg-8 col-md-8 col-sm12 col-xs-12"},[a("q-field",{attrs:{label:e.$t("ID"),"label-width":e.labelWidth}},[a("q-input",{attrs:{disable:""},model:{value:e.inputForm[".key"],callback:function(t){e.$set(e.inputForm,".key",t)},expression:"inputForm['.key']"}})],1),a("q-field",{attrs:{label:e.$t("Overtime date"),"label-width":e.labelWidth}},[a("q-datetime",{attrs:{color:"primary",disable:"",type:"date"},model:{value:e.inputForm.overtimeDate,callback:function(t){e.$set(e.inputForm,"overtimeDate",t)},expression:"inputForm.overtimeDate"}})],1),a("q-field",{attrs:{label:e.$t("From"),"label-width":e.labelWidth}},[a("q-datetime",{attrs:{color:"primary",disable:"",format24h:"",type:"time"},model:{value:e.inputForm.from,callback:function(t){e.$set(e.inputForm,"from",t)},expression:"inputForm.from"}})],1),a("q-field",{attrs:{label:e.$t("To"),"label-width":e.labelWidth}},[a("q-datetime",{attrs:{color:"secondary",disable:"",format24h:"",type:"time"},model:{value:e.inputForm.to,callback:function(t){e.$set(e.inputForm,"to",t)},expression:"inputForm.to"}})],1),a("q-field",{attrs:{label:e.$t("Break"),"label-width":e.labelWidth}},[a("q-select",{attrs:{disable:"",options:[{label:""+e.$t("No break"),value:0},{label:"1 "+e.$t("Hours"),value:1}]},model:{value:e.inputForm.overtimeBreakHours,callback:function(t){e.$set(e.inputForm,"overtimeBreakHours",t)},expression:"inputForm.overtimeBreakHours"}})],1),a("q-field",{attrs:{label:e.$t("Overtime hours"),"label-width":e.labelWidth}},[a("q-input",{attrs:{disable:"",type:"number",suffix:e.$t("Hours")},model:{value:e.inputForm.overtimeHours,callback:function(t){e.$set(e.inputForm,"overtimeHours",t)},expression:"inputForm.overtimeHours"}})],1),a("q-field",{attrs:{label:e.$t("Type"),"label-width":e.labelWidth}},[a("q-select",{attrs:{options:e.overtimeTypeOptions},model:{value:e.inputForm.overtimeType,callback:function(t){e.$set(e.inputForm,"overtimeType",t)},expression:"inputForm.overtimeType"}})],1),a("q-field",{attrs:{label:e.$t("Overtime pay"),"label-width":e.labelWidth}},[a("q-input",{attrs:{disable:"",type:"text",suffix:e.$t("Hours")},model:{value:e.inputForm.overtimePay,callback:function(t){e.$set(e.inputForm,"overtimePay",t)},expression:"inputForm.overtimePay"}})],1),a("q-field",{attrs:{label:e.$t("Compensate"),"label-width":e.labelWidth}},[a("q-toggle",{attrs:{"checked-icon":"sentiment very satisfied","unchecked-icon":"sentiment very dissatisfied"},model:{value:e.inputForm.otCompensate,callback:function(t){e.$set(e.inputForm,"otCompensate",t)},expression:"inputForm.otCompensate"}})],1),a("q-field",{attrs:{label:e.$t("Reason"),"label-width":e.labelWidth}},[a("q-input",{attrs:{type:"text"},model:{value:e.inputForm.reason,callback:function(t){e.$set(e.inputForm,"reason",t)},expression:"inputForm.reason"}})],1),a("q-field",{attrs:{label:e.$t("Approval"),"label-width":e.labelWidth}},[a("q-toggle",{attrs:{"checked-icon":"sentiment very satisfied","unchecked-icon":"sentiment very dissatisfied"},model:{value:e.inputForm.approval,callback:function(t){e.$set(e.inputForm,"approval",t)},expression:"inputForm.approval"}})],1),a("div",{staticClass:"submit"},["update"===e.formAction?a("q-btn",{staticClass:"q-mr-sm",attrs:{color:"primary",icon:"save","wait-for-ripple":"",label:e.$t("Save")},on:{click:e.updateForm}}):e._e(),a("q-btn",{staticClass:"q-mr-sm",attrs:{color:"light",icon:"cancel","wait-for-ripple":"",label:e.$t("Cancel")},on:{click:function(t){e.formModal=!1}}})],1)],1)])])],1)},n=[];r._withStripped=!0;var i=a("3156"),o=a.n(i),s=a("278c"),l=a.n(s),u=(a("c5f6"),a("7514"),a("551c"),a("6762"),a("2fdb"),a("ac6a"),a("96cf"),a("c973")),c=a.n(u),d=a("2f62"),m=a("f490"),p=a("2ef0"),f=a.n(p),v=a("44de"),h=a("7266"),y=function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div")},b=[];y._withStripped=!0;var g={data:function(){return{teamCalendarOptions:[]}},methods:{getTeamCalendarOptions:function(){var e=this;return new Promise(function(t){var a=e,r=[];a.$database.collection("teamCalendars").orderBy("code").get().then(function(e){return e.forEach(function(e){r.push({id:e.id,calendarMaster:e.data().calendarMaster,teamMembers:e.data().teamMembers,activityTypes:e.data().activityTypes,value:e.id,label:e.data().code})}),t(r)})})}},created:function(){var e=c()(regeneratorRuntime.mark(function e(){var t;return regeneratorRuntime.wrap(function(e){while(1)switch(e.prev=e.next){case 0:return t=this,e.next=3,t.getTeamCalendarOptions();case 3:t.teamCalendarOptions=e.sent;case 4:case"end":return e.stop()}},e,this)}));return function(){return e.apply(this,arguments)}}()},D=g,w=a("2877"),k=Object(w["a"])(D,y,b,!1,null,null,null);k.options.__file="teamCalendarOptions.vue";var F=k.exports,$=a("05d8"),q=a("2508"),Y=a("a274"),H=a("3daa"),O=a("0caf"),x=a("fe5b"),T={name:"approveOvertimeRequest",mixins:[v["a"],h["a"],F,q["a"],Y["a"],$["a"],H["a"],x["a"],O["a"]],data:function(){return{staffInDept:[],filterByYear:parseInt(m["d"].formatDate(Date.now(),"YYYY")),pagination:{sortBy:"overtimeDate",descending:!0},columns:[{name:".key",label:this.$t("ID"),field:".key",sortable:!0,align:"left"},{name:"overtimeDate",label:this.$t("Date"),field:"overtimeDate",sortable:!0,sort:function(e,t){return parseInt(e,10)-parseInt(t,10)},align:"left"},{name:"authUser",label:this.$t("Name"),field:"authUser",sortable:!0,align:"left"},{name:"hours",label:this.$t("Hours"),field:"overtimeHours",sortable:!0,align:"left"},{name:"pay",label:this.$t("Pay"),field:"overtimePay",sortable:!0,align:"left"},{name:"type",label:this.$t("Type"),field:"overtimeType",sortable:!1,align:"left"},{name:"approval",label:this.$t("Approval"),field:"approval",sortable:!1,align:"left"}],visibleColumns:["overtimeDate","authUser","hours","pay","type","approval"],inputForm:{".key":null,authUser:"",department:"",overtimeDate:new Date,from:null,otCompensate:!1,to:null,overtimeBreakHours:0,overtimeHours:0,overtimeType:"",overtimePay:0,reason:"",approval:!1,approvedBy:null,reference:"",calendarYear:parseInt(m["d"].formatDate(Date.now(),"YYYY")),createdBy:"",createdOn:"",modifiedBy:"",modifiedOn:""}}},validations:{inputForm:{}},firestore:function(){return{overtimeRequestTB:this.$database.collection("overtimeRequest").where("calendarYear","==",this.filterByYear),overtimeRequest:this.$database.collection("overtimeRequest")}},methods:{updateForm:function(){var e=c()(regeneratorRuntime.mark(function e(){var t;return regeneratorRuntime.wrap(function(e){while(1)switch(e.prev=e.next){case 0:if(t=this,t.inputForm.modifiedBy=t.userId,t.inputForm.overtimeDate=new Date(t.inputForm.overtimeDate),t.inputForm.modifiedOn=new Date,!t.inputForm.approval){e.next=9;break}return e.next=7,t.addWorkSchedule();case 7:e.next=11;break;case 9:return e.next=11,t.deleteWorkSchedule();case 11:return e.next=13,t.updateProcess(t.$firestore.overtimeRequest,t.inputForm,t.$v.inputForm);case 13:case"end":return e.stop()}},e,this)}));return function(){return e.apply(this,arguments)}}(),getYear:function(e){return e.getFullYear()},getMonth:function(e){return e.getMonth()+1},getDate:function(e){return e.getDate()},addWorkSchedule:function(){var e=this,t=[],a=parseInt(m["d"].formatDate(e.inputForm.from,"HH")),r=parseInt(m["d"].formatDate(e.inputForm.to,"HH")),n=parseInt(m["d"].formatDate(e.inputForm.from,"mm")),i=parseInt(m["d"].formatDate(e.inputForm.to,"mm")),o=m["d"].buildDate({year:e.getYear(e.inputForm.overtimeDate),month:e.getMonth(e.inputForm.overtimeDate),date:e.getDate(e.inputForm.overtimeDate),hours:a,minutes:n,seconds:0,milliseconds:0}),s=m["d"].buildDate({year:e.getYear(e.inputForm.overtimeDate),month:e.getMonth(e.inputForm.overtimeDate),date:e.getDate(e.inputForm.overtimeDate),hours:r,minutes:i,seconds:0,milliseconds:0});return e.teamCalendarOptions.forEach(function(a){e._.includes(a.teamMembers,e.inputForm.authUser)&&t.push(a.id)}),new Promise(function(a){e.$database.collection("workSchedule").where("overtime","==",e.inputForm[".key"]).get().then(function(r){r.size||t.forEach(function(t){e.$database.collection("workSchedule").add({teamCalendar:t,overtime:e.inputForm[".key"],authUser:e.inputForm.authUser,start:o,end:s,note:"",type:"overTime",createdBy:e.userId,createdOn:new Date,modifiedBy:e.userId,modifiedOn:new Date}).then(function(e){return console.log(e.id),a(!0)}).catch(function(t){return console.log(t),e.$q.notify({message:"".concat(e.$t("error")," : ").concat(t),type:"warning",icon:"warning"}),a(!0)})})})})},deleteWorkSchedule:function(){var e=this,t=[];return new Promise(function(a){e.$database.collection("workSchedule").where("overtime","==",e.inputForm[".key"]).get().then(function(r){return r.forEach(function(t){e.deleteWorkScheduleDB(t.id)}),a(t)})})},deleteWorkScheduleDB:function(e){var t=this;return new Promise(function(a){var r=t;r.$database.collection("workSchedule").doc(e).delete().then(function(){return a(!0)}).catch(function(e){return console.error("Error removing document: ",e),a(!0)})})},calcOvertimeHours:function(){var e=this.inputForm.from,t=this.inputForm.to,a=this.inputForm.overtimeBreakHours,r="hours",n=m["d"].getDateDiff(t,e,r),i=n-a;return i>0?(this.inputForm.overtimeHours=i,i):0},calcOvertimeType:function(){var e=c()(regeneratorRuntime.mark(function e(){var t,a,r,n,i,o,s,l,u,c,d,p;return regeneratorRuntime.wrap(function(e){while(1)switch(e.prev=e.next){case 0:return t=this,a=t.inputForm.overtimeDate,r=t.inputForm.from,e.next=5,t.getWorkingDay();case 5:return n=e.sent,e.next=8,t.getTraditionalHolidays();case 8:i=e.sent,o=n[m["d"].formatDate(a,"d")].wh,s=!1,l=new Date("".concat(m["d"].formatDate(a,"YYYY-MM-DD"),"T").concat(m["d"].formatDate(r,"HH:mm"))),u=m["d"].addToDate(l,{minutes:1}),c=new Date("".concat(m["d"].formatDate(a,"YYYY-MM-DD"),"T").concat(m["d"].formatDate(o.from,"HH:mm"))),d=new Date("".concat(m["d"].formatDate(a,"YYYY-MM-DD"),"T").concat(m["d"].formatDate(o.to,"HH:mm"))),p=!m["d"].isBetweenDates(m["d"].formatDate(u,"YYYY-MM-DDTHH:mm"),m["d"].formatDate(c,"YYYY-MM-DDTHH:mm"),m["d"].formatDate(d,"YYYY-MM-DDTHH:mm")),t._.includes(i,m["d"].formatDate(a,"DDD"))?s=!0:n[m["d"].formatDate(a,"d")].wd?n[m["d"].formatDate(a,"d")].wd&&(s=!1):s=!0,t.inputForm.overtimeType=f.a.find(t.overtimeTypeOptions,{holiday:s,overtime:p})?f.a.find(t.overtimeTypeOptions,{holiday:s,overtime:p}).value:"";case 18:case"end":return e.stop()}},e,this)}));return function(){return e.apply(this,arguments)}}(),calcOvertimePay:function(){var e=this,t=e.calcOvertimeHours(),a=e.inputForm.overtimeType,r=f.a.find(e.overtimeTypeOptions,{value:a})?f.a.find(e.overtimeTypeOptions,{value:a}).rate:0,n=Number(t*r);n>=0&&(e.inputForm.overtimePay=n)},getWorkingDay:function(){var e=this;return new Promise(function(t){var a=[];e.$database.collection("company").limit(1).get().then(function(e){e.forEach(function(e){return a=[{wd:e.data().sunday.workingDay,wh:e.data().sunday.range?e.data().sunday.range:[],bkh:e.data().sunday.breakHour},{wd:e.data().monday.workingDay,wh:e.data().monday.range?e.data().monday.range:[],bkh:e.data().monday.breakHour},{wd:e.data().tuesday.workingDay,wh:e.data().tuesday.range?e.data().tuesday.range:[],bkh:e.data().tuesday.breakHour},{wd:e.data().wednesday.workingDay,wh:e.data().wednesday.range?e.data().wednesday.range:[],bkh:e.data().wednesday.breakHour},{wd:e.data().thursday.workingDay,wh:e.data().thursday.range?e.data().thursday.range:[],bkh:e.data().thursday.breakHour},{wd:e.data().friday.workingDay,wh:e.data().friday.range?e.data().friday.range:[],bkh:e.data().friday.breakHour},{wd:e.data().saturday.workingDay,wh:e.data().saturday.range?e.data().saturday.range:[],bkh:e.data().saturday.breakHour}],t(a)})})})},getTraditionalHolidays:function(){var e=this;return new Promise(function(t){var a=[];e.$database.collection("holidayCalendar").where("year","==",parseInt(m["d"].formatDate(e.inputForm.overtimeDate,"YYYY"))).get().then(function(e){return e.forEach(function(e){a.push(m["d"].formatDate(e.data().date,"DDD"))}),t(a)})})}},created:function(){var e=c()(regeneratorRuntime.mark(function e(){var t,a;return regeneratorRuntime.wrap(function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,this.loadingState(this.$firestore.overtimeRequestTB);case 2:t=e.sent,a=l()(t,2),this.collectionSize=a[0],this.loading=a[1],this.initialInputForm(this.inputForm);case 7:case"end":return e.stop()}},e,this)}));return function(){return e.apply(this,arguments)}}(),computed:o()({},Object(d["c"])(["userId"])),watch:{filterByYear:function(){console.log("filter"),this.$binding("overtimeRequestTB",this.$database.collection("overtimeRequest").where("approvedBy","==",this.userId).where("calendarYear","==",this.filterByYear))},"inputForm.overtimeDate":function(){this.inputForm.overtimeDate&&(this.inputForm.calendarYear=parseInt(m["d"].formatDate(this.inputForm.overtimeDate,"YYYY")),this.calcOvertimeType(),this.calcOvertimePay())},"inputForm.from":function(){this.inputForm.from&&(this.calcOvertimeHours(),this.calcOvertimeType(),this.calcOvertimePay())},"inputForm.to":function(){this.inputForm.to&&(this.calcOvertimeHours(),this.calcOvertimeType(),this.calcOvertimePay())},"inputForm.overtimeType":function(){this.inputForm.overtimeType&&(this.calcOvertimeHours(),this.calcOvertimePay())},"inputForm.overtimeBreakHours":function(){this.inputForm.overtimeBreakHours&&(this.calcOvertimeHours(),this.calcOvertimePay())}}},C=T,_=(a("6c2d"),Object(w["a"])(C,r,n,!1,null,null,null));_.options.__file="ApproveOvertimeRequest.vue";t["default"]=_.exports},da81:function(e,t,a){}}]);